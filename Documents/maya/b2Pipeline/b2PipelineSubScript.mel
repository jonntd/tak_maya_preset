
//대표 preview 등록.
//현재 보고 있는 preview를 대표이미지로 등록할 수 있다.
//target : asset / seq / shot 
global proc int setRepresentPreview( string $previewUI, string $target )
{

	string $curPreviewImg = `image -q -i $previewUI`;

	if ($curPreviewImg == "noPreview.jpg"){
		print "// no preview assigned yet.";
		return 0;
	}

	//Asset
	if ($previewUI == "assetPreviewImg"){

		string $currSelItem[] = `b2GetCurrentlySelectedItem 2 2`;
		
		if ($currSelItem[1] == ""){
			print "// select Asset first\n";
			return 0;
		}

		string $imgDirPath = `b2GetFileName 2 $currSelItem[0] $currSelItem[1] "" 0 "folder" 0`;
		string $targetFile = ($imgDirPath + $currSelItem[1] + ".jpg");	

		//copy		
		int $cpResult = `sysFile -copy $targetFile $curPreviewImg`;

		if ($cpResult)
			print "// successfully copy preview image.\n";

	}
	//shotPreview
	else{
		
		string $selItem[] = `b2GetCurrentlySelectedItem 3 4`;

		if ($selItem[1] == ""){
			print "// select shot first\n";
			return 0;
		}

		string $path;
		string $targetFile;

		if ($target == "seq" || $target == "both" ){

			$path = `b2GetFileName2 $selItem[0] "" "" "" 0 "folder" 0`;
			$targetFile = ($path + $selItem[0] + ".jpg");

			//copy		
			int $cpResult = `sysFile -copy $targetFile $curPreviewImg`;
			if ($cpResult)
				print ("// successfully copy preview image for " + $selItem[0]  + ".\n");

		}

		if ($target == "shot" || $target == "both" ){

			$path = `b2GetFileName2 $selItem[0] $selItem[1] "" "" 0 "folder" 0`;
			$targetFile = ($path + $selItem[1] + ".jpg");

			//copy		
			int $cpResult = `sysFile -copy $targetFile $curPreviewImg`;
			if ($cpResult)
				print ("// successfully copy preview image for " + $selItem[1]  + ".\n");

		}

	}

	return 1;
}


// 대표 preview 등록 for Asset
// 선택한 AssetType의 asset들을 최신 디벨롭의 preview로 등록합니다.
global proc int setAssetRepresentPreview()
{

	string $curSelItem[] = `b2GetCurrentlySelectedItem 2 2`;
	
	if ($curSelItem[0] == ""){
		print "// select AssetType first\n";
		return 0;
	}

	string $AssetTypeDir = `b2GetFileName 2 $curSelItem[0] "" "" 0 "folder" 0`;
	string $assets[] = `b2GetFolderList $AssetTypeDir`;
	print $assets;

	for ( $curAsset in $assets){

		string $imgDirPath = `b2GetFileName 2 $curSelItem[0] $curAsset "" 0 "folder" 0`;
		print ($imgDirPath + "\n");
		string $imgFile[] = `getFileList -folder $imgDirPath -filespec "*.jpg"`;

		if (size($imgFile) == 0){

			//compoFloderlist
			string $compo[] = `b2GetFolderList $imgDirPath`;
			// print $compo;
			string $compoDevelop = ($imgDirPath + $compo[0] + "/develop/");
			if ( `filetest -d $compoDevelop` ){
				string $versions[] = `getFileList -folder $compoDevelop`;
				$versions = `sort $versions`;
				if (size($versions) == 0)
					continue;
				string $latestVer = $versions[size($versions)-1];
				string $previewImg[] = `getFileList -folder ($compoDevelop + $latestVer + "/") -filespec "*.jpg"`;
				print $previewImg;

				string $sourceFile = ($compoDevelop + $latestVer + "/" + $previewImg[0]);
				string $targetFile = ($imgDirPath + $curAsset + ".jpg");

				//copy		
				int $cpResult = `sysFile -copy $targetFile $sourceFile`;

				if ($cpResult)
					print ("// successfully copy preview image for " + $curAsset + "\n");

			}


		}
		else{
			print ("// already has preview Img. " + $curAsset + "\n");
		}


	}
	b2InitPreview "ast";
	return 1;
}


// 대표 preview 등록 for Shot
// seq 이하 최신 프리뷰로 등록.
global proc int setShotRepresentPreview()
{

	//seq list - 현재 프로젝트에 
	string $seqPath = `b2GetFileName2 "" "" "" "" 0 "folder" 0`;
	string $seq[] = `b2GetFolderList $seqPath`;

	for ( $curSeq in $seq ) {

		string $curSeqPreview = ($seqPath + "/" + $curSeq + "/" + $curSeq + ".jpg");
		print ($curSeqPreview + "\n");

		string $shotPath = `b2GetFileName2 $curSeq "" "" "" 0 "folder" 0`;
		string $shot[] = `b2GetFolderList $shotPath`;

		for ( $curShot in $shot ){

			string $curShotPath = `b2GetFileName2 $curSeq $curShot "" "" 0 "folder" 0`;
			string $shotPreview = ($curShotPath + $curShot + ".jpg");

			string $devPath = `b2GetFileName2 $curSeq $curShot "ani" "master" 0 "developDir" 0`;
			string $developFolderContents[] = `getFileList -folder ($devPath) -filespec "v???"`;
			$developFolderContents = `sort $developFolderContents`;
			
			if (size($developFolderContents) == 0)
				continue;

			string $latestVer = $developFolderContents[size($developFolderContents)-1];
			string $latestDevVer = ($devPath + $latestVer + "/");
			string $previewImg[] = `getFileList -folder $latestDevVer -filespec "*.jpg"`;

			if ( size($previewImg) ){

				string $sourceFile = $latestDevVer + $previewImg[0];

				if ( !`filetest -f $shotPreview` ){
					//copy		
					int $cpResult = `sysFile -copy $shotPreview $sourceFile`;
					if ($cpResult)
						print ("// successfully copy preview image for " + $curShot + " of " + $curSeq  + ".\n");
				}

				//firstShot Preview를 seq preview로 등록.	
				if ( !`filetest -f $curSeqPreview` ){
					//copy		
					int $cpResult = `sysFile -copy $curSeqPreview $sourceFile`;
					if ($cpResult)
						print ("// successfully copy preview image for " + $curSeq  + ".\n");
				}

			}			

		}
	}

	return 1;
}


// saveCurrentRenderView
// 현재 랜더뷰포트의 이미지를 preview로 저장.
global proc int b2saveRenderviewImg( string $filename )
{

	// first find the render view controls
	string $renderViewPanels[] = `getPanel -scriptType "renderWindowPanel"`;
	if (size($renderViewPanels) < 1) { error "Render View window not found"; }
	string $renderViewForm     = `renderWindowEditor -query -parent $renderViewPanels[0]`;
	if ($renderViewForm == "")       { error "Render View window not found"; }
	renderWindowEditor -exists $renderViewPanels[0];

	//save img
	int $curImgFormat = `getAttr "defaultRenderGlobals.imageFormat"`;
	setAttr "defaultRenderGlobals.imageFormat" 8;
	string $outputImg[] = `renderWindowEditor -e -wi $filename $renderViewPanels[0]`;
	setAttr "defaultRenderGlobals.imageFormat" $curImgFormat;

	// b2ResizeImage 320 240 $outputImg[0] $filename;
	b2imScale $filename $filename;
	return 1;

}

//resize image to 320*240
//use imconvert.exe in maya
global proc b2imScale(string $filename, string $output)
{

	string $mayaInstallPath = `getenv "MAYA_LOCATION"`;
	string $imConvert = ($mayaInstallPath + "/bin/imconvert.exe");

	if (`filetest -f $imConvert`){

		system ("imconvert.exe " + $filename + " -resize 320x240 + " + $output);
	}
	else{
		error "// imconvert.exe is not exists.\n";
	}

}


global proc int b2loadSnapshotImg(string $output)
{
	string $filenames[] = `fileDialog2 -fileMode 1 -caption "load snapshot image"`;
	
	//file format
	string $ext = fileExtension($filenames[0]);
	string $path = dirname( $filenames[0] );
	string $filename = basenameEx($filenames[0]);



	if ( $ext == "iff" ){ //imconvert.exe doesnot support iff

		string $mayaInstallPath = `getenv "MAYA_LOCATION"`;
		string $imgcvt = ($mayaInstallPath + "/bin/imgcvt.exe");
		if (`filetest -f $imgcvt`){
			system (" imgcvt.exe -f iff -t jpg " + $filenames[0] + " " + $output);
		}	

		b2imScale $output $output;
		return 1;

	}
	else if ( $ext == "jpg" || $ext == "png" || $ext == "pic" || $ext == "tif" || $ext == "tga" || $ext == "bmp" || $ext == "sgi" 
		|| $ext == "rgb" || $ext == "gif" || $ext == "psd" || $ext == "dds"){

		b2imScale $filenames[0] $output;
		return 1;

	}
	else{
		error "not supported file type.";
		return 0;
	}
	
	//sequencial
	// string $fileSeq[] = `getFileList -folder ($path + "/") -filespec "*.mel"`;

}



//resize
//asPoserResizeImage 로 부터 가져옴.
global proc b2ResizeImage (int $x, int $y, string $inputImage, string $outputImage)
{
	string $sel[]=`ls -sl`;
	string $previewImgFileExt="jpg";
	string $uniqueFileName=`b2UniqueFile $inputImage`;
	string $fileNode=`createNode file`;
	setAttr -type "string" ($fileNode+".fileTextureName") $inputImage;
	eval ("convertSolidTx -sp 1 -al 1 -rx "+$x+" -ry "+$y+" -n asTempSolidTx32 -fil \""+$previewImgFileExt+"\" -fin \""+$outputImage+"\"");
	delete $fileNode asTempSolidTx32;
	sysFile -del $uniqueFileName;
	select $sel;
}



//asUniqueFile 로 부터 가져옴.
global proc string b2UniqueFile (string $file)
{
	// Copies given file to a random named file, to avoid fileNode cache
	string $buffer[];
	int $numTok=`tokenize $file "/" $buffer`;
	string $path="";
	if (`gmatch $file "/*"`)
		$path="/";
	for ($i=0;$i<($numTok-1);$i++)
		$path+=$buffer[$i]+"/";
	int $numTok=`tokenize $file "." $buffer`;
	string $ext=$buffer[$numTok-1];
	string $randNumber=`rand 42`;
	string $uniqueFile=$path+"unique"+`substituteAllString $randNumber "." ""`+"."+$ext;
	sysFile -cp $uniqueFile $file;
	return $uniqueFile;
}


global proc int b2AddMovSeq( string $field ){

	string $curFilePath = `file -q -sn`;
	string $currentDir = `dirname ($curFilePath)`; 			
	string $fileDialog[] = `fileDialog2 -caption "select mov or sequencial image" -fileMode 1 -dir $currentDir -okCaption "Select"`;

	//file format
	string $ext = fileExtension($fileDialog[0]);
	string $path = dirname( $fileDialog[0] );
	string $filename = basenameEx($fileDialog[0]);

	if ( $ext == "mov" ){
		textFieldButtonGrp -edit -text $fileDialog[0] $field;
		print ($fileDialog[0] + "\n");
		return 1;
	}
	else if ( $ext == "jpg" || $ext == "png" || $ext == "pic" || $ext == "tif" || $ext == "tga" || $ext == "bmp" || $ext == "sgi" 
		|| $ext == "rgb" || $ext == "gif" || $ext == "psd" || $ext == "dds" || $ext == "iff"){

		if ( `gmatch $filename "*[0-9]"` ){ 
	
			string $baseName = `substitute "[0-9]+$" $filename ""`; //맨 뒷부분의 숫자만 제외하고 
			string $seqFiles[] = `getFileList -folder ($path + "/") -fs ( $baseName + "*." + $ext) `;

			string $seqList[];
			int $i = 0;
			for ($curSeqFile in $seqFiles)
			{
				string $num = `match "[0-9]+" $curSeqFile`; // 숫자만 뽑아서

				if (`gmatch ($baseName + $num + "." + $ext) $curSeqFile`)// 매칭시켜 맞으면~
					$seqList[$i++] = $curSeqFile;

			}

			

			if( $i > 1 )
			{

				string $pdpPathOrig = "c:/program files (x86)/pdPlayer/pdPlayer.exe";
				string $qtpPathOrig = "c:/program files (x86)/quicktime/quicktimeplayer.exe";
				string $pdpPathNative = `toNativePath $pdpPathOrig`;
				string $qtpPathNative = `toNativePath $qtpPathOrig`;
				
				if (!`filetest -f $pdpPathOrig`){
					error "no pdplyaer";
				}
				string $tmpDir = `internalVar -userTmpDir`;
				string $mov = ($tmpDir + $filename + ".mov");
				string $playerCommand = ("start " +  $pdpPathNative + " " + $fileDialog[0] + " --fps=30 --save_layer_as=" + $mov + ",avc1,best --exit");
				print ($playerCommand + "\n");
				system ( $playerCommand );
				textFieldButtonGrp -edit -text $mov $field;
				print ($mov + "\n");
				return 1;
				
			}
			else
			{
				print ("//" + $filename + "." + $ext + " is not sequencial\n");
				return 0;
			}
		}
		else{
			print ("//" + $filename + "." + $ext + " is not sequencial\n");
			return 0;
		}

		
	}
	else{
		error "not supported file type.";
	}

}



print "// successfully load..\n";